package com.example.ordersservice.domain;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.time.LocalDateTime;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = "Orders")
public class Order {

    String id;

    String product;

    String category;

    BigDecimal price;

    String customerName;

    String deliveryDestination;

    OrderStatus status;

    boolean isCompleted;

    LocalDateTime completedAt;

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    @DynamoDBAttribute
    public String getProduct() {
        return product;
    }

    @DynamoDBAttribute
    public String getCategory() {
        return category;
    }

    @DynamoDBAttribute
    public BigDecimal getPrice() {
        return price;
    }

    @DynamoDBAttribute
    public String getCustomerName() {
        return customerName;
    }

    @DynamoDBAttribute
    public String getDeliveryDestination() {
        return deliveryDestination;
    }

    @DynamoDBAttribute
    @DynamoDBTypeConvertedEnum
    public OrderStatus getStatus() {
        return status;
    }

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.BOOL)
    public boolean isCompleted() {
        return isCompleted;
    }

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    public LocalDateTime getCompletedAt() {
        return completedAt;
    }

    static public class LocalDateTimeConverter implements DynamoDBTypeConverter<String, LocalDateTime> {
        @Override
        public String convert( final LocalDateTime time ) {
            return time.toString();
        }
        @Override
        public LocalDateTime unconvert( final String stringValue ) {

            return LocalDateTime.parse(stringValue);
        }
    }

}
